/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * rcVue
 * MIT Licensed
 *  @jsx rc 
 */

var render = function render(component, node) {
	component.$parent = node;
	component._render();
};

var rCreate = function rCreate(type) {
	var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
		children[_key - 2] = arguments[_key];
	}

	return { type: type, props: props || {}, children: children || [] };
};

var createElement = function createElement(node) {
	if (typeof node == 'string' || typeof node == 'number' || typeof node == 'boolean') {
		return document.createTextNode(node);
	} else if (typeof node.type == 'function') {
		var instance = new node.type(node.props);
		return typeof instance.isComponent == 'function' && instance.isComponent() ? createElement(instance.render()) : createElement(instance);
	}

	var $element = document.createElement(node.type);

	setProperties($element, node.props);

	node.children.map(createElement).map($element.appendChild.bind($element));

	return $element;
};

var isEvent = function isEvent(name) {
	if (name == 'onClick' || name == 'onChange') {
		return true;
	}

	return false;
};

var changed = function changed(node1, node2) {
	return (typeof node1 === 'undefined' ? 'undefined' : _typeof(node1)) !== (typeof node2 === 'undefined' ? 'undefined' : _typeof(node2)) || (typeof node1 === 'string' || typeof node1 == 'number' || typeof node1 == 'boolean') && node1 !== node2 || node1.type !== node2.type;
};

var setProperties = function setProperties($element, props) {
	Object.keys(props).forEach(function (key) {
		setProperty($element, key, props[key]);
	});
};

var setProperty = function setProperty($element, name, value) {
	if (name === 'className') {
		$element.setAttribute('class', value);
	} else if (isEvent(name)) {
		addEventListener($element, name, value);
		return;
	} else {

		$element.setAttribute(name, value);
	}
};

var addEventListener = function addEventListener($element, name, handler) {
	$element.addEventListener(getActionNameFromKey(name), handler);
};

var getActionNameFromKey = function getActionNameFromKey(key) {
	if (key === 'onClick') {
		return 'click';
	} else if (key === 'onChange') {
		return 'input';
	}
};

var updateElement = function updateElement($parent, newNode, oldNode) {
	var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

	if (oldNode == undefined) {
		$parent.appendChild(createElement(newNode));
	} else if (newNode == undefined) {
		$parent.removeChild($parent.childNodes[index]);
	} else if (changed(newNode, oldNode)) {

		$parent.replaceChild(createElement(newNode), $parent.childNodes[index]);
	} else if (newNode.type) {
		var newLength = newNode.children.length;
		var oldLength = oldNode.children.length;

		for (var i = 0; i < newLength || i < oldLength; i++) {
			updateElement($parent.childNodes[index], newNode.children[i], oldNode.children[i], i);
		}

		updateAttributes($parent.childNodes[index], newNode, oldNode);
	}
};

var updateAttributes = function updateAttributes($element, newNode, oldNode) {

	Object.keys(oldNode.props).forEach(function (key) {
		if (!newNode.props[key]) {
			$element.removeAttribute(key);
		}
	});

	Object.keys(newNode.props).forEach(function (key) {
		if (newNode.props[key] != oldNode.props[key]) {
			$element.setAttribute(key, newNode.props[key]);
		}
	});
};

exports.render = render;
exports.rCreate = rCreate;
exports.updateElement = updateElement;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
rcVue
icensed



var _VirtualDOM = __webpack_require__(0);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RComponent = function () {
	function RComponent(props, context) {
		_classCallCheck(this, RComponent);

		this._execHook('preLoad');

		this.$parent = props.$parent || null;
		this._vdom = null;

		console.log(props);
		this.props = props;

		this._execHook('postLoad');
	}

	_createClass(RComponent, [{
		key: 'isComponent',
		value: function isComponent() {
			return true;
		}
	}, {
		key: 'setState',
		value: function setState(obj) {
			this._execHook('preStateChange');
			this.state = Object.assign(this.state, obj);
			this._execHook('postStateChange');
			this._render();
		}
	}, {
		key: '_execHook',
		value: function _execHook(hook) {
			if (typeof this[hook] == 'function') {
				this[hook]();
			}
		}
	}, {
		key: '_render',
		value: function _render() {
			var oldVDom = this._vdom;
			var newVDom = this.render();

			this._execHook('preRender');
			this._vdom = newVDom;
			(0, _VirtualDOM.updateElement)(this.$parent, newVDom, oldVDom);
			this._execHook('postRender');
		}
	}]);

	return RComponent;
}();

exports.default = RComponent;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _RcVue = __webpack_require__(3);

var _RcVue2 = _interopRequireDefault(_RcVue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var a = 4; /**
            * rcVue
            * MIT Licensed
            */

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RComponent2 = __webpack_require__(1);

var _RComponent3 = _interopRequireDefault(_RComponent2);

var _Hello = __webpack_require__(4);

var _Hello2 = _interopRequireDefault(_Hello);

var _VirtualDOM = __webpack_require__(0);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * rcVue
icensed
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var Button = function (_RComponent) {
	_inherits(Button, _RComponent);

	function Button(props) {
		_classCallCheck(this, Button);

		var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

		_this.state = {
			name: 'mohamed',
			count: 0
		};
		document.Button = _this;
		return _this;
	}

	_createClass(Button, [{
		key: 'handleInputChange',
		value: function handleInputChange(e) {
			this.setState({
				name: e.target.value
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var handleInputChange = this.handleInputChange.bind(this);
			return (0, _VirtualDOM.rCreate)(
				'div',
				null,
				this.state.name,
				(0, _VirtualDOM.rCreate)('input', { onChange: handleInputChange }),
				(0, _VirtualDOM.rCreate)(_Hello2.default, { name: this.state.name }),
				(0, _VirtualDOM.rCreate)(Hi, null),
				(0, _VirtualDOM.rCreate)(
					'button',
					{ className: 'btn', text: this.state.name },
					this.state.name
				),
				(0, _VirtualDOM.rCreate)(
					'b',
					null,
					this.state.count
				)
			);
		}
	}]);

	return Button;
}(_RComponent3.default);

function Hi() {
	return (0, _VirtualDOM.rCreate)(
		'a',
		{ href: '#' },
		'|La La'
	);
}

var btn = new Button({});
var $root = document.getElementById('app');

(0, _VirtualDOM.render)(btn, $root);

exports.default = {};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RComponent2 = __webpack_require__(1);

var _RComponent3 = _interopRequireDefault(_RComponent2);

var _VirtualDOM = __webpack_require__(0);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Hello = function (_RComponent) {
	_inherits(Hello, _RComponent);

	function Hello(props) {
		_classCallCheck(this, Hello);

		return _possibleConstructorReturn(this, (Hello.__proto__ || Object.getPrototypeOf(Hello)).call(this, props));
	}

	_createClass(Hello, [{
		key: 'render',
		value: function render() {
			var name = this.props.name;
			return (0, _VirtualDOM.rCreate)(
				'div',
				null,
				'Hello ',
				name
			);
		}
	}]);

	return Hello;
}(_RComponent3.default);

exports.default = Hello;

/***/ })
/******/ ]);
//# sourceMappingURL=rcVue.min.js.map